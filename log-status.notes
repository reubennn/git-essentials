# Check the working tree status:
git status

Check previous changes:
git log
git log --oneline //Display on the first line of the commit messages

* // ---------- FILTER THE LOG ---------- // *
#Filter number of commits seen
git log -3
git log -n 5 // Only display the 5 most recent commits

# Filter log by time
git log --since=2020-03-01 
git log --until=2020-03-01
git log --until="3 days ago"
git log --after=2.weeks --before=3.days

# Filter log by author
git log --author="Reuben"

# Filter for regular expressions
fit log --grep="Initial" //Returns if message was Initial commit

# Filter log all commits within two SHAs
git log <SHA-1>..<SHA-2>
git log <SHA-1>..HEAD

# Filter log based on changes to a particular file or directory
git log <filename or directory>

* // ---------- FORMAT THE LOG ---------- // *
# Look at changeset with each commit 
git log -p // Patch
// What is the patch that would change it from one condition to the other?

#Show statistics about a commit
git log --stat

Alter the format:
    - git log --format=medium // Medium is the default
    - git log --format=short // Shorter format
    - oneline // Commits on one line (with full SHA value)
    - full
    - fuller
    - email
    - raw

# For shorter SHAs on oneline, can use: 
git log --oneline

# Graphs out the commits
git log --graph

# Nice simple map to see branching & merging of commits
git log --graph --all --oneline --decorate

* // ---------- LOG OPTIONS ---------- // *
// Log is the primary interface to Git
// Log has many options: sorting, filtering, output formatting

# List commits as patches (diff)
git log --patch
OR:
git log -p

# List edits to lines 100-150 in a file
git log -L 100,150:<filename>

# Use '/' to search for a string in the log
// e.g. / bananas to search for first occurance of bananas in commit code
# Press 'n' for the next search result
# Press 'N' for previous search result